generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(uuid())
  username  String        @unique
  email     String        @unique
  password  String
  refresh   String        @default("")
  createdAt DateTime      @default(now())
  profile   Profile?
  ideas     Idea[]        @relation("author")
  likes     LikeDislike[]
  comments  Comment[]
}

model Profile {
  id        String    @id @default(uuid())
  firstname String
  lastname  String
  DOB       DateTime?
  country   String?
  gender    Gender?
  languages String[]
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String    @unique
}

model Idea {
  id        Int           @id @default(autoincrement())
  content   String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  Author    User          @relation("author", fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String
  likes     LikeDislike[]
  comments  Comment[]
}

model LikeDislike {
  id        Int     @id @default(autoincrement())
  value     LikeVal
  likedby   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  likedIdea Idea    @relation(fields: [ideaId], references: [id], onDelete: Cascade)
  ideaId    Int

  @@unique([userId, ideaId])
}

model Comment {
  id            Int    @id @default(autoincrement())
  value         String
  commentby     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  commentedIdea Idea   @relation(fields: [ideaId], references: [id], onDelete: Cascade)
  ideaId        Int
}

enum LikeVal {
  Like
  Dislike
}

enum Gender {
  MALE
  FEMALE
  OTHER
}
